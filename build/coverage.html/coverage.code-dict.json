{"/home/travis/build/npmtest/node-npmtest-pretty-error/test.js":"/* istanbul instrument in package npmtest_pretty_error */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pretty-error/lib.npmtest_pretty_error.js":"/* istanbul instrument in package npmtest_pretty_error */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_pretty_error = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_pretty_error = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-pretty-error/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-pretty-error && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_pretty_error */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_pretty_error\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_pretty_error.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_pretty_error.rollup.js'] =\n            local.assetsDict['/assets.npmtest_pretty_error.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_pretty_error.__dirname +\n                    '/lib.npmtest_pretty_error.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-pretty-error/node_modules/pretty-error/lib/PrettyError.js":"// Generated by CoffeeScript 1.8.0\nvar ParsedError, PrettyError, RenderKid, array, defaultStyle, instance, nodePaths, object, prop, _fn, _i, _len, _ref, _ref1,\n  __slice = [].slice,\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n_ref = require('utila'), object = _ref.object, array = _ref.array;\n\ndefaultStyle = require('./defaultStyle');\n\nParsedError = require('./ParsedError');\n\nnodePaths = require('./nodePaths');\n\nRenderKid = require('renderkid');\n\ninstance = null;\n\nmodule.exports = PrettyError = (function() {\n  var self;\n\n  self = PrettyError;\n\n  PrettyError._filters = {\n    'module.exports': function(item) {\n      if (item.what == null) {\n        return;\n      }\n      item.what = item.what.replace(/\\.module\\.exports\\./g, ' - ');\n    }\n  };\n\n  PrettyError._getDefaultStyle = function() {\n    return defaultStyle();\n  };\n\n  PrettyError.start = function() {\n    if (instance == null) {\n      instance = new self;\n      instance.start();\n    }\n    return instance;\n  };\n\n  PrettyError.stop = function() {\n    return instance != null ? instance.stop() : void 0;\n  };\n\n  function PrettyError() {\n    this._useColors = true;\n    this._maxItems = 50;\n    this._packagesToSkip = [];\n    this._pathsToSkip = [];\n    this._skipCallbacks = [];\n    this._filterCallbacks = [];\n    this._parsedErrorFilters = [];\n    this._aliases = [];\n    this._renderer = new RenderKid;\n    this._style = self._getDefaultStyle();\n    this._renderer.style(this._style);\n  }\n\n  PrettyError.prototype.start = function() {\n    var prepeare;\n    this._oldPrepareStackTrace = Error.prepareStackTrace;\n    prepeare = this._oldPrepareStackTrace || function(exc, frames) {\n      var result;\n      result = exc.toString();\n      frames = frames.map(function(frame) {\n        return \"  at \" + (frame.toString());\n      });\n      return result + \"\\n\" + frames.join(\"\\n\");\n    };\n    Error.prepareStackTrace = (function(_this) {\n      return function(exc, trace) {\n        var stack;\n        stack = prepeare.apply(null, arguments);\n        return _this.render({\n          stack: stack,\n          message: exc.toString().replace(/^.*: /, '')\n        }, false);\n      };\n    })(this);\n    return this;\n  };\n\n  PrettyError.prototype.stop = function() {\n    Error.prepareStackTrace = this._oldPrepareStackTrace;\n    return this._oldPrepareStackTrace = null;\n  };\n\n  PrettyError.prototype.config = function(c) {\n    var alias, path, _ref1;\n    if (c.skipPackages != null) {\n      if (c.skipPackages === false) {\n        this.unskipAllPackages();\n      } else {\n        this.skipPackage.apply(this, c.skipPackages);\n      }\n    }\n    if (c.skipPaths != null) {\n      if (c.skipPaths === false) {\n        this.unskipAllPaths();\n      } else {\n        this.skipPath.apply(this, c.skipPaths);\n      }\n    }\n    if (c.skip != null) {\n      if (c.skip === false) {\n        this.unskipAll();\n      } else {\n        this.skip.apply(this, c.skip);\n      }\n    }\n    if (c.maxItems != null) {\n      this.setMaxItems(c.maxItems);\n    }\n    if (c.skipNodeFiles === true) {\n      this.skipNodeFiles();\n    } else if (c.skipNodeFiles === false) {\n      this.unskipNodeFiles();\n    }\n    if (c.filters != null) {\n      if (c.filters === false) {\n        this.removeAllFilters();\n      } else {\n        this.filter.apply(this, c.filters);\n      }\n    }\n    if (c.parsedErrorFilters != null) {\n      if (c.parsedErrorFilters === false) {\n        this.removeAllParsedErrorFilters();\n      } else {\n        this.filterParsedError.apply(this, c.parsedErrorFilters);\n      }\n    }\n    if (c.aliases != null) {\n      if (object.isBareObject(c.aliases)) {\n        _ref1 = c.aliases;\n        for (path in _ref1) {\n          alias = _ref1[path];\n          this.alias(path, alias);\n        }\n      } else if (c.aliases === false) {\n        this.removeAllAliases();\n      }\n    }\n    return this;\n  };\n\n  PrettyError.prototype.withoutColors = function() {\n    this._useColors = false;\n    return this;\n  };\n\n  PrettyError.prototype.withColors = function() {\n    this._useColors = true;\n    return this;\n  };\n\n  PrettyError.prototype.skipPackage = function() {\n    var packages, pkg, _i, _len;\n    packages = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    for (_i = 0, _len = packages.length; _i < _len; _i++) {\n      pkg = packages[_i];\n      this._packagesToSkip.push(String(pkg));\n    }\n    return this;\n  };\n\n  PrettyError.prototype.unskipPackage = function() {\n    var packages, pkg, _i, _len;\n    packages = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    for (_i = 0, _len = packages.length; _i < _len; _i++) {\n      pkg = packages[_i];\n      array.pluckOneItem(this._packagesToSkip, pkg);\n    }\n    return this;\n  };\n\n  PrettyError.prototype.unskipAllPackages = function() {\n    this._packagesToSkip.length = 0;\n    return this;\n  };\n\n  PrettyError.prototype.skipPath = function() {\n    var path, paths, _i, _len;\n    paths = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    for (_i = 0, _len = paths.length; _i < _len; _i++) {\n      path = paths[_i];\n      this._pathsToSkip.push(path);\n    }\n    return this;\n  };\n\n  PrettyError.prototype.unskipPath = function() {\n    var path, paths, _i, _len;\n    paths = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    for (_i = 0, _len = paths.length; _i < _len; _i++) {\n      path = paths[_i];\n      array.pluckOneItem(this._pathsToSkip, path);\n    }\n    return this;\n  };\n\n  PrettyError.prototype.unskipAllPaths = function() {\n    this._pathsToSkip.length = 0;\n    return this;\n  };\n\n  PrettyError.prototype.skip = function() {\n    var callbacks, cb, _i, _len;\n    callbacks = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n      cb = callbacks[_i];\n      this._skipCallbacks.push(cb);\n    }\n    return this;\n  };\n\n  PrettyError.prototype.unskip = function() {\n    var callbacks, cb, _i, _len;\n    callbacks = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n      cb = callbacks[_i];\n      array.pluckOneItem(this._skipCallbacks, cb);\n    }\n    return this;\n  };\n\n  PrettyError.prototype.unskipAll = function() {\n    this._skipCallbacks.length = 0;\n    return this;\n  };\n\n  PrettyError.prototype.skipNodeFiles = function() {\n    return this.skipPath.apply(this, nodePaths);\n  };\n\n  PrettyError.prototype.unskipNodeFiles = function() {\n    return this.unskipPath.apply(this, nodePaths);\n  };\n\n  PrettyError.prototype.filter = function() {\n    var callbacks, cb, _i, _len;\n    callbacks = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n      cb = callbacks[_i];\n      this._filterCallbacks.push(cb);\n    }\n    return this;\n  };\n\n  PrettyError.prototype.removeFilter = function() {\n    var callbacks, cb, _i, _len;\n    callbacks = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n      cb = callbacks[_i];\n      array.pluckOneItem(this._filterCallbacks, cb);\n    }\n    return this;\n  };\n\n  PrettyError.prototype.removeAllFilters = function() {\n    this._filterCallbacks.length = 0;\n    return this;\n  };\n\n  PrettyError.prototype.filterParsedError = function() {\n    var callbacks, cb, _i, _len;\n    callbacks = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n      cb = callbacks[_i];\n      this._parsedErrorFilters.push(cb);\n    }\n    return this;\n  };\n\n  PrettyError.prototype.removeParsedErrorFilter = function() {\n    var callbacks, cb, _i, _len;\n    callbacks = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n      cb = callbacks[_i];\n      array.pluckOneItem(this._parsedErrorFilters, cb);\n    }\n    return this;\n  };\n\n  PrettyError.prototype.removeAllParsedErrorFilters = function() {\n    this._parsedErrorFilters.length = 0;\n    return this;\n  };\n\n  PrettyError.prototype.setMaxItems = function(maxItems) {\n    if (maxItems == null) {\n      maxItems = 50;\n    }\n    if (maxItems === 0) {\n      maxItems = 50;\n    }\n    this._maxItems = maxItems | 0;\n    return this;\n  };\n\n  PrettyError.prototype.alias = function(stringOrRx, alias) {\n    this._aliases.push({\n      stringOrRx: stringOrRx,\n      alias: alias\n    });\n    return this;\n  };\n\n  PrettyError.prototype.removeAlias = function(stringOrRx) {\n    array.pluckByCallback(this._aliases, function(pair) {\n      return pair.stringOrRx === stringOrRx;\n    });\n    return this;\n  };\n\n  PrettyError.prototype.removeAllAliases = function() {\n    this._aliases.length = 0;\n    return this;\n  };\n\n  PrettyError.prototype._getStyle = function() {\n    return this._style;\n  };\n\n  PrettyError.prototype.appendStyle = function(toAppend) {\n    object.appendOnto(this._style, toAppend);\n    this._renderer.style(toAppend);\n    return this;\n  };\n\n  PrettyError.prototype._getRenderer = function() {\n    return this._renderer;\n  };\n\n  PrettyError.prototype.render = function(e, logIt, useColors) {\n    var obj, rendered;\n    if (logIt == null) {\n      logIt = false;\n    }\n    if (useColors == null) {\n      useColors = this._useColors;\n    }\n    obj = this.getObject(e);\n    rendered = this._renderer.render(obj, useColors);\n    if (logIt === true) {\n      console.error(rendered);\n    }\n    return rendered;\n  };\n\n  PrettyError.prototype.getObject = function(e) {\n    var count, header, i, item, obj, traceItems, _i, _len, _ref1;\n    if (!(e instanceof ParsedError)) {\n      e = new ParsedError(e);\n    }\n    this._applyParsedErrorFiltersOn(e);\n    header = {\n      title: (function() {\n        var ret;\n        ret = {};\n        if (e.wrapper !== '') {\n          ret.wrapper = \"\" + e.wrapper;\n        }\n        ret.kind = e.kind;\n        return ret;\n      })(),\n      colon: ':',\n      message: String(e.message).trim()\n    };\n    traceItems = [];\n    count = -1;\n    _ref1 = e.trace;\n    for (i = _i = 0, _len = _ref1.length; _i < _len; i = ++_i) {\n      item = _ref1[i];\n      if (item == null) {\n        continue;\n      }\n      if (this._skipOrFilter(item, i) === true) {\n        continue;\n      }\n      count++;\n      if (count > this._maxItems) {\n        break;\n      }\n      if (typeof item === 'string') {\n        traceItems.push({\n          item: {\n            custom: item\n          }\n        });\n        continue;\n      }\n      traceItems.push((function() {\n        var markupItem;\n        markupItem = {\n          item: {\n            header: {\n              pointer: (function() {\n                if (item.file == null) {\n                  return '';\n                }\n                return {\n                  file: item.file,\n                  colon: ':',\n                  line: item.line\n                };\n              })()\n            },\n            footer: (function() {\n              var foooter;\n              foooter = {\n                addr: item.shortenedAddr\n              };\n              if (item.extra != null) {\n                foooter.extra = item.extra;\n              }\n              return foooter;\n            })()\n          }\n        };\n        if (typeof item.what === 'string' && item.what.trim().length > 0) {\n          markupItem.item.header.what = item.what;\n        }\n        return markupItem;\n      })());\n    }\n    obj = {\n      'pretty-error': {\n        header: header\n      }\n    };\n    if (traceItems.length > 0) {\n      obj['pretty-error'].trace = traceItems;\n    }\n    return obj;\n  };\n\n  PrettyError.prototype._skipOrFilter = function(item, itemNumber) {\n    var cb, modName, pair, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;\n    if (typeof item === 'object') {\n      if (_ref1 = item.modName, __indexOf.call(this._packagesToSkip, _ref1) >= 0) {\n        return true;\n      }\n      if (_ref2 = item.path, __indexOf.call(this._pathsToSkip, _ref2) >= 0) {\n        return true;\n      }\n      _ref3 = item.packages;\n      for (_i = 0, _len = _ref3.length; _i < _len; _i++) {\n        modName = _ref3[_i];\n        if (__indexOf.call(this._packagesToSkip, modName) >= 0) {\n          return true;\n        }\n      }\n      if (typeof item.shortenedAddr === 'string') {\n        _ref4 = this._aliases;\n        for (_j = 0, _len1 = _ref4.length; _j < _len1; _j++) {\n          pair = _ref4[_j];\n          item.shortenedAddr = item.shortenedAddr.replace(pair.stringOrRx, pair.alias);\n        }\n      }\n    }\n    _ref5 = this._skipCallbacks;\n    for (_k = 0, _len2 = _ref5.length; _k < _len2; _k++) {\n      cb = _ref5[_k];\n      if (cb(item, itemNumber) === true) {\n        return true;\n      }\n    }\n    _ref6 = this._filterCallbacks;\n    for (_l = 0, _len3 = _ref6.length; _l < _len3; _l++) {\n      cb = _ref6[_l];\n      cb(item, itemNumber);\n    }\n    return false;\n  };\n\n  PrettyError.prototype._applyParsedErrorFiltersOn = function(error) {\n    var cb, _i, _len, _ref1;\n    _ref1 = this._parsedErrorFilters;\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      cb = _ref1[_i];\n      cb(error);\n    }\n  };\n\n  return PrettyError;\n\n})();\n\n_ref1 = ['renderer', 'style'];\n_fn = function() {\n  var methodName;\n  methodName = '_get' + prop[0].toUpperCase() + prop.substr(1, prop.length);\n  return PrettyError.prototype.__defineGetter__(prop, function() {\n    return this[methodName]();\n  });\n};\nfor (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n  prop = _ref1[_i];\n  _fn();\n}\n","/home/travis/build/npmtest/node-npmtest-pretty-error/node_modules/pretty-error/lib/defaultStyle.js":"// Generated by CoffeeScript 1.8.0\nmodule.exports = function() {\n  return {\n    'pretty-error': {\n      display: 'block',\n      marginLeft: '2'\n    },\n    'pretty-error > header': {\n      display: 'block'\n    },\n    'pretty-error > header > title > kind': {\n      background: 'red',\n      color: 'bright-white'\n    },\n    'pretty-error > header > title > wrapper': {\n      marginRight: '1',\n      color: 'grey'\n    },\n    'pretty-error > header > colon': {\n      color: 'grey',\n      marginRight: 1\n    },\n    'pretty-error > header > message': {\n      color: 'bright-white'\n    },\n    'pretty-error > trace': {\n      display: 'block',\n      marginTop: 1\n    },\n    'pretty-error > trace > item': {\n      display: 'block',\n      marginBottom: 1,\n      marginLeft: 2,\n      bullet: '\"<grey>-</grey>\"'\n    },\n    'pretty-error > trace > item > header': {\n      display: 'block'\n    },\n    'pretty-error > trace > item > header > pointer > file': {\n      color: 'bright-yellow'\n    },\n    'pretty-error > trace > item > header > pointer > colon': {\n      color: 'grey'\n    },\n    'pretty-error > trace > item > header > pointer > line': {\n      color: 'bright-yellow',\n      marginRight: 1\n    },\n    'pretty-error > trace > item > header > what': {\n      color: 'white'\n    },\n    'pretty-error > trace > item > footer': {\n      display: 'block'\n    },\n    'pretty-error > trace > item > footer > addr': {\n      display: 'block',\n      color: 'grey'\n    },\n    'pretty-error > trace > item > footer > extra': {\n      display: 'block',\n      color: 'grey'\n    }\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-pretty-error/node_modules/pretty-error/lib/ParsedError.js":"// Generated by CoffeeScript 1.8.0\nvar ParsedError, prop, sysPath, _fn, _i, _len, _ref;\n\nsysPath = require('path');\n\nmodule.exports = ParsedError = (function() {\n  function ParsedError(error) {\n    this.error = error;\n    this._parse();\n  }\n\n  ParsedError.prototype._parse = function() {\n    var m;\n    this._trace = [];\n    this._kind = 'Error';\n    this._wrapper = '';\n    if (this.error.wrapper != null) {\n      this._wrapper = String(this.error.wrapper);\n    }\n    if (typeof this.error !== 'object') {\n      this._message = String(this.error);\n    } else {\n      this._stack = this.error.stack;\n      if (this.error.kind != null) {\n        this._kind = String(this.error.kind);\n      } else if (typeof this._stack === 'string') {\n        if (m = this._stack.match(/^([a-zA-Z0-9\\_\\$]+):\\ /)) {\n          this._kind = m[1];\n        }\n      }\n      if (typeof this._stack === 'string') {\n        this._parseStack();\n      } else {\n        this._message = (this.error.message != null) && String(this.error.message) || '';\n      }\n    }\n  };\n\n  ParsedError.prototype._parseStack = function() {\n    var line, message, messageLines, reachedTrace, _i, _len, _ref;\n    messageLines = [];\n    reachedTrace = false;\n    _ref = this._stack.split('\\n');\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      line = _ref[_i];\n      if (line.trim() === '') {\n        continue;\n      }\n      if (reachedTrace) {\n        this._trace.push(this._parseTraceItem(line));\n      } else {\n        if (line.match(/^\\s*at\\s.+/)) {\n          reachedTrace = true;\n          this._trace.push(this._parseTraceItem(line));\n        } else {\n          messageLines.push(line);\n        }\n      }\n    }\n    message = messageLines.join('\\n');\n    if (message.substr(0, this._kind.length) === this._kind) {\n      message = message.substr(this._kind.length, message.length).replace(/^\\:\\s+/, '');\n    }\n    this._message = message;\n  };\n\n  ParsedError.prototype._parseTraceItem = function(text) {\n    var addr, col, d, dir, file, jsCol, jsLine, line, m, original, packageName, packages, path, r, remaining, shortenedAddr, shortenedPath, what;\n    text = text.trim();\n    if (text === '') {\n      return;\n    }\n    if (!text.match(/^at\\ /)) {\n      return text;\n    }\n    text = text.replace(/^at /, '');\n    if (text === 'Error (<anonymous>)' || text === 'Error (<anonymous>:null:null)') {\n      return;\n    }\n    original = text;\n    what = null;\n    addr = null;\n    path = null;\n    dir = null;\n    file = null;\n    line = null;\n    col = null;\n    jsLine = null;\n    jsCol = null;\n    shortenedPath = null;\n    shortenedAddr = null;\n    packageName = '[current]';\n    if (m = text.match(/\\(([^\\)]+)\\)$/)) {\n      addr = m[1].trim();\n    }\n    if (addr != null) {\n      what = text.substr(0, text.length - addr.length - 2);\n      what = what.trim();\n    }\n    if (addr == null) {\n      addr = text.trim();\n    }\n    addr = this._fixPath(addr);\n    remaining = addr;\n    if (m = remaining.match(/\\,\\ <js>:(\\d+):(\\d+)$/)) {\n      jsLine = m[1];\n      jsCol = m[2];\n      remaining = remaining.substr(0, remaining.length - m[0].length);\n    }\n    if (m = remaining.match(/:(\\d+):(\\d+)$/)) {\n      line = m[1];\n      col = m[2];\n      remaining = remaining.substr(0, remaining.length - m[0].length);\n      path = remaining;\n    }\n    if (path != null) {\n      file = sysPath.basename(path);\n      dir = sysPath.dirname(path);\n      if (dir === '.') {\n        dir = '';\n      }\n      path = this._fixPath(path);\n      file = this._fixPath(file);\n      dir = this._fixPath(dir);\n    }\n    if (dir != null) {\n      d = dir.replace(/[\\\\]{1,2}/g, '/');\n      if (m = d.match(/node_modules\\/([^\\/]+)(?!.*node_modules.*)/)) {\n        packageName = m[1];\n      }\n    }\n    if (jsLine == null) {\n      jsLine = line;\n      jsCol = col;\n    }\n    if (path != null) {\n      r = this._rectifyPath(path);\n      shortenedPath = r.path;\n      shortenedAddr = shortenedPath + addr.substr(path.length, addr.length);\n      packages = r.packages;\n    }\n    return {\n      original: original,\n      what: what,\n      addr: addr,\n      path: path,\n      dir: dir,\n      file: file,\n      line: parseInt(line),\n      col: parseInt(col),\n      jsLine: parseInt(jsLine),\n      jsCol: parseInt(jsCol),\n      packageName: packageName,\n      shortenedPath: shortenedPath,\n      shortenedAddr: shortenedAddr,\n      packages: packages || []\n    };\n  };\n\n  ParsedError.prototype._getMessage = function() {\n    return this._message;\n  };\n\n  ParsedError.prototype._getKind = function() {\n    return this._kind;\n  };\n\n  ParsedError.prototype._getWrapper = function() {\n    return this._wrapper;\n  };\n\n  ParsedError.prototype._getStack = function() {\n    return this._stack;\n  };\n\n  ParsedError.prototype._getArguments = function() {\n    return this.error[\"arguments\"];\n  };\n\n  ParsedError.prototype._getType = function() {\n    return this.error.type;\n  };\n\n  ParsedError.prototype._getTrace = function() {\n    return this._trace;\n  };\n\n  ParsedError.prototype._fixPath = function(path) {\n    return path.replace(/[\\\\]{1,2}/g, '/');\n  };\n\n  ParsedError.prototype._rectifyPath = function(path, nameForCurrentPackage) {\n    var m, packages, parts, remaining, rest;\n    path = String(path);\n    remaining = path;\n    if (!(m = path.match(/^(.+?)\\/node_modules\\/(.+)$/))) {\n      return {\n        path: path,\n        packages: []\n      };\n    }\n    parts = [];\n    packages = [];\n    if (typeof nameForCurrentPackage === 'string') {\n      parts.push(\"[\" + nameForCurrentPackage + \"]\");\n      packages.push(\"[\" + nameForCurrentPackage + \"]\");\n    } else {\n      parts.push(\"[\" + (m[1].match(/([^\\/]+)$/)[1]) + \"]\");\n      packages.push(m[1].match(/([^\\/]+)$/)[1]);\n    }\n    rest = m[2];\n    while (m = rest.match(/([^\\/]+)\\/node_modules\\/(.+)$/)) {\n      parts.push(\"[\" + m[1] + \"]\");\n      packages.push(m[1]);\n      rest = m[2];\n    }\n    if (m = rest.match(/([^\\/]+)\\/(.+)$/)) {\n      parts.push(\"[\" + m[1] + \"]\");\n      packages.push(m[1]);\n      rest = m[2];\n    }\n    parts.push(rest);\n    return {\n      path: parts.join(\"/\"),\n      packages: packages\n    };\n  };\n\n  return ParsedError;\n\n})();\n\n_ref = ['message', 'kind', 'arguments', 'type', 'stack', 'trace', 'wrapper'];\n_fn = function() {\n  var methodName;\n  methodName = '_get' + prop[0].toUpperCase() + prop.substr(1, prop.length);\n  return Object.defineProperty(ParsedError.prototype, prop, {\n    get: function() {\n      return this[methodName]();\n    }\n  });\n};\nfor (_i = 0, _len = _ref.length; _i < _len; _i++) {\n  prop = _ref[_i];\n  _fn();\n}\n","/home/travis/build/npmtest/node-npmtest-pretty-error/node_modules/pretty-error/lib/nodePaths.js":"// Generated by CoffeeScript 1.8.0\nmodule.exports = ['_debugger.js', '_http_agent.js', '_http_client.js', '_http_common.js', '_http_incoming.js', '_http_outgoing.js', '_http_server.js', '_linklist.js', '_stream_duplex.js', '_stream_passthrough.js', '_stream_readable.js', '_stream_transform.js', '_stream_writable.js', '_tls_legacy.js', '_tls_wrap.js', 'assert.js', 'buffer.js', 'child_process.js', 'cluster.js', 'console.js', 'constants.js', 'crypto.js', 'dgram.js', 'dns.js', 'domain.js', 'events.js', 'freelist.js', 'fs.js', 'http.js', 'https.js', 'module.js', 'net.js', 'os.js', 'path.js', 'punycode.js', 'querystring.js', 'readline.js', 'repl.js', 'smalloc.js', 'stream.js', 'string_decoder.js', 'sys.js', 'timers.js', 'tls.js', 'tty.js', 'url.js', 'util.js', 'vm.js', 'zlib.js', 'node.js'];\n","/home/travis/build/npmtest/node-npmtest-pretty-error/node_modules/pretty-error/start.js":"require('./lib/PrettyError').start()"}